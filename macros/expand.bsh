
String selection = textArea.getSelectedText();

String className = buffer.getName().split("[.]")[0];

String[] lines = selection.split("\n");
String newSelection = "";
for (int i = 0; i < lines.length; i++)
{
   String line = lines[i];

   line = line.replaceAll(" *(virtual +)?([^( ']+) +(test[a-zA-Z_0-9]+[(][^\"]*[)]) *( = 0)? *;", "$2 " + className + "::$3\n{\n   // Arrange\n   \n   // Act\n   \n   // Assert\n   qDebug(\"Warning: [" + className + "] Test not written\");\n}\n");
   line = line.replaceAll(" *(static +)?(virtual +)?([^( ']+) +([a-zA-Z_0-9]+[(][^\"]*[)])(.* const)? *( = 0)? *; *", "$3 " + className + "::$4$5\n{\n   qDebug(\"Warning: [" + className + "] '$4' is not implemented\");\n}\n");
   line = line.replaceAll(" *static ([^ ].+) ([A-Z_]+);", "$1 " + className + "::$2 = ;");
   line = line.replaceAll(" *extern (const )?([^ ].+) ([A-Z_]+);", "$1$2 " + className + "::$3 = ;");
   line = line.replaceAll(" *class *([A-Z][a-zA-Z0-9_]+);", "#include <$1.h>");
   line = line.replaceAll(" *CPPUNIT_TEST[(](.*)[)];", "   void $1();");
   line = line.replaceAll(" *CPPUNIT_DATA_TEST[(](.*)[)];", "   void $1();\n   void $1_data();");
   line = line.replaceAll(" *CPPUNIT_FETCH[(](.*), (.*)[)];", "   addColumn<$1>(\"$2\");");

   newSelection = newSelection + line + "\n";
}

//selection = selection.replaceAll(" *([^(]+) ([a-zA-Z_0-9]+[(].*[)]) *( =", "$2 " + className + "::$2\n{\n   qDebug(\"Not Implemented\");\n}");

textArea.setSelectedText(newSelection);


/*


*/
